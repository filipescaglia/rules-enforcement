name: Check naming conventions
on:
  pull_request:

jobs:
  check-branch-name:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Validate branch name
        run: |
          # Getting branch name
          branch_name="${GITHUB_HEAD_REF}"

          echo "Checking branch: $branch_name"

          pattern="^(feature|hotfix|fix|chore|issue)\/[0-9]+[-0-9a-zA-Z]*$"

          # Check if the branch name matches the pattern
          if [[ ! "$branch_name" =~ $pattern ]]; then
            echo "Invalid branch name: $branch_name"
            echo "Use format: feature/123, hotfix/456-task, fix/789-bugfix"
            exit 1
          fi
        shell: bash

      - name: Validate commits messages
        run: |
          # Get commits specific to the PR branch
          git fetch --prune --unshallow || git fetch --all

          commits=$(git log --no-merges --format=%s origin/${{ github.base_ref }}..origin/${{ github.head_ref }})
          
          echo "Checking commits"

          pattern="^(feature|hotfix|fix|chore|issue)\/[0-9]+: "

          invalid_commits=()

          while read -r commit; do
            # Validate the message pattern
            if ! [[ $commit =~ $pattern ]]; then
              echo "\"$commit\" invalid commit message"
              invalid_commits+=("$commit")
            else
              echo "\"$commit\" commit message ok"
            fi

          done <<< "$commits"

          if [[ ${#invalid_commits[@]} -gt 0 ]]; then
            echo -e "\nThe following commits are invalid:"
            for invalid in "${invalid_commits[@]}"; do
              echo "$invalid"
            done

            echo "Use format: feature/123: Add some feature"
            exit 1
          fi
